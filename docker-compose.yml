---
services:
  example:
    image: yolkhovyy/example:${APP_VERSION:-v0.0.0}
    stop_signal: SIGINT
    depends_on:
      otel-collector:
        condition: service_started
    ports:
      - 8080:${EXAMPLE_HTTP_PORT:-8080}
    build:
      context: .
      dockerfile: cmd/example/Dockerfile
      target: ${BUILD_TARGET:-release}
      args:
        - APP_VERSION
    environment:
      - EXAMPLE_HTTP_PORT
      - EXAMPLE_HTTP_SHUTDOWNTIMEOUT
      - EXAMPLE_HTTP_READHEADERTIMEOUT
      - EXAMPLE_LOGGER_ENABLE
      - EXAMPLE_LOGGER_OTLP_PROTOCOL
      - EXAMPLE_LOGGER_OTLP_ENDPOINT
      - EXAMPLE_TRACER_ENABLE
      - EXAMPLE_TRACER_OTLP_PROTOCOL
      - EXAMPLE_TRACER_OTLP_ENDPOINT
      - EXAMPLE_METRIC_ENABLE
      - EXAMPLE_METRIC_PROMETHEUS
      - EXAMPLE_METRIC_INTERVAL
      - EXAMPLE_METRIC_OTLP_PROTOCOL
      - EXAMPLE_METRIC_OTLP_ENDPOINT

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    restart: unless-stopped
    volumes:
      - ./config/otel-collector/${OTEL_COLLECTOR_CONFIG:-grafana-loki-jaeger.yml}:/etc/otel-collector-config.yml
    environment:
      - HC_ENDPOINT
      - HC_TEAM
      - DD_SITE
      - DD_API_KEY
      - DT_TENANT
      - DT_API_TOKEN
      - NEWRELIC_ENDPOINT
      - NEWRELIC_API_KEY
      - OO_ORG_ID
      - OO_API_KEY
      - UPTRACE_DSN
      - GCLOUD_API_KEY
      - GCLOUD_ENDPOINT
      - GCLOUD_USERNAME
